{"version":3,"sources":["../src/unique-index.js"],"names":["UniqueIndex","constructor","computeHash","_itemByHash","Object","create","_keysToHash","_onAdd","bind","_onUpdate","_onRemove","value","key","NotImplemented","items","_attachCollection","collection","all","on","ACTION_ADD","ACTION_UPDATE","ACTION_REMOVE","_detachCollection","removeListener","itemByHash","keysToHash","hash","prev"],"mappings":"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","sourcesContent":["import iteratee from 'lodash/iteratee'\n\nimport clearObject from './clear-object'\nimport NotImplemented from './not-implemented'\nimport { ACTION_ADD, ACTION_UPDATE, ACTION_REMOVE } from './collection'\n\n// ===================================================================\n\nexport class UniqueIndex {\n  constructor(computeHash) {\n    if (computeHash) {\n      this.computeHash = iteratee(computeHash)\n    }\n\n    this._itemByHash = Object.create(null)\n    this._keysToHash = Object.create(null)\n\n    // Bound versions of listeners.\n    this._onAdd = this._onAdd.bind(this)\n    this._onUpdate = this._onUpdate.bind(this)\n    this._onRemove = this._onRemove.bind(this)\n  }\n\n  // This method is used to compute the hash under which an item must\n  // be saved.\n  computeHash(value, key) {\n    throw new NotImplemented('this method must be overridden')\n  }\n\n  // -----------------------------------------------------------------\n\n  get items() {\n    return this._itemByHash\n  }\n\n  // -----------------------------------------------------------------\n\n  _attachCollection(collection) {\n    // Add existing entries.\n    //\n    // FIXME: I think there may be a race condition if the `add` event\n    // has not been emitted yet.\n    this._onAdd(collection.all)\n\n    collection.on(ACTION_ADD, this._onAdd)\n    collection.on(ACTION_UPDATE, this._onUpdate)\n    collection.on(ACTION_REMOVE, this._onRemove)\n  }\n\n  _detachCollection(collection) {\n    collection.removeListener(ACTION_ADD, this._onAdd)\n    collection.removeListener(ACTION_UPDATE, this._onUpdate)\n    collection.removeListener(ACTION_REMOVE, this._onRemove)\n\n    clearObject(this._itemByHash)\n    clearObject(this._keysToHash)\n  }\n\n  // -----------------------------------------------------------------\n\n  _onAdd(items) {\n    const { computeHash, _itemByHash: itemByHash, _keysToHash: keysToHash } = this\n\n    for (const key in items) {\n      const value = items[key]\n\n      const hash = computeHash(value, key)\n\n      if (hash != null) {\n        itemByHash[hash] = value\n        keysToHash[key] = hash\n      }\n    }\n  }\n\n  _onUpdate(items) {\n    const { computeHash, _itemByHash: itemByHash, _keysToHash: keysToHash } = this\n\n    for (const key in items) {\n      const value = items[key]\n\n      const prev = keysToHash[key]\n      const hash = computeHash(value, key)\n\n      // Removes item from the previous hash's list if any.\n      if (prev != null) delete itemByHash[prev]\n\n      // Inserts item into the new hash's list if any.\n      if (hash != null) {\n        itemByHash[hash] = value\n        keysToHash[key] = hash\n      } else {\n        delete keysToHash[key]\n      }\n    }\n  }\n\n  _onRemove(items) {\n    const { _itemByHash: itemByHash, _keysToHash: keysToHash } = this\n\n    for (const key in items) {\n      const prev = keysToHash[key]\n      if (prev != null) {\n        delete itemByHash[prev]\n        delete keysToHash[key]\n      }\n    }\n  }\n}\n"],"file":"unique-index.js"}