{"version":3,"sources":["../src/index.js"],"names":["Index","constructor","computeHash","_itemsByHash","Object","create","_keysToHash","_onAdd","bind","_onUpdate","_onRemove","value","key","NotImplemented","sweep","itemsByHash","hash","items","_attachCollection","collection","all","on","ACTION_ADD","ACTION_UPDATE","ACTION_REMOVE","_detachCollection","removeListener","keysToHash","prev"],"mappings":";;;;;;;AAAA;;AAEA;;AACA;;AACA;;AACA;;;;AAIO,MAAMA,KAAN,CAAY;AACjBC,EAAAA,WAAW,CAACC,WAAD,EAAc;AACvB,QAAIA,WAAJ,EAAiB;AACf,WAAKA,WAAL,GAAmB,uBAASA,WAAT,CAAnB;AACD;;AAED,SAAKC,YAAL,GAAoBC,MAAM,CAACC,MAAP,CAAc,IAAd,CAApB;AACA,SAAKC,WAAL,GAAmBF,MAAM,CAACC,MAAP,CAAc,IAAd,CAAnB;AAGA,SAAKE,MAAL,GAAc,KAAKA,MAAL,CAAYC,IAAZ,CAAiB,IAAjB,CAAd;AACA,SAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeD,IAAf,CAAoB,IAApB,CAAjB;AACA,SAAKE,SAAL,GAAiB,KAAKA,SAAL,CAAeF,IAAf,CAAoB,IAApB,CAAjB;AACD;;AAIDN,EAAAA,WAAW,CAACS,KAAD,EAAQC,GAAR,EAAa;AACtB,UAAM,IAAIC,uBAAJ,CAAmB,gCAAnB,CAAN;AACD;;AAGDC,EAAAA,KAAK,GAAG;AACN,UAAsBC,WAAtB,GAAsC,IAAtC,CAAQZ,YAAR;;AACA,SAAK,MAAMa,IAAX,IAAmBD,WAAnB,EAAgC;AAC9B,UAAI,sBAAQA,WAAW,CAACC,IAAD,CAAnB,CAAJ,EAAgC;AAC9B,eAAOD,WAAW,CAACC,IAAD,CAAlB;AACD;AACF;AACF;;AAIQ,MAALC,KAAK,GAAG;AACV,WAAO,KAAKd,YAAZ;AACD;;AAIDe,EAAAA,iBAAiB,CAACC,UAAD,EAAa;AAK5B,SAAKZ,MAAL,CAAYY,UAAU,CAACC,GAAvB;;AAEAD,IAAAA,UAAU,CAACE,EAAX,CAAcC,sBAAd,EAA0B,KAAKf,MAA/B;AACAY,IAAAA,UAAU,CAACE,EAAX,CAAcE,yBAAd,EAA6B,KAAKd,SAAlC;AACAU,IAAAA,UAAU,CAACE,EAAX,CAAcG,yBAAd,EAA6B,KAAKd,SAAlC;AACD;;AAEDe,EAAAA,iBAAiB,CAACN,UAAD,EAAa;AAC5BA,IAAAA,UAAU,CAACO,cAAX,CAA0BJ,sBAA1B,EAAsC,KAAKf,MAA3C;AACAY,IAAAA,UAAU,CAACO,cAAX,CAA0BH,yBAA1B,EAAyC,KAAKd,SAA9C;AACAU,IAAAA,UAAU,CAACO,cAAX,CAA0BF,yBAA1B,EAAyC,KAAKd,SAA9C;AAEA,8BAAY,KAAKP,YAAjB;AACA,8BAAY,KAAKG,WAAjB;AACD;;AAIDC,EAAAA,MAAM,CAACU,KAAD,EAAQ;AACZ,UAAQf,WAAR,GAA4E,IAA5E,CAAQA,WAAR;AAAA,UAAmCa,WAAnC,GAA4E,IAA5E,CAAqBZ,YAArB;AAAA,UAA6DwB,UAA7D,GAA4E,IAA5E,CAAgDrB,WAAhD;;AAEA,SAAK,MAAMM,GAAX,IAAkBK,KAAlB,EAAyB;AACvB,YAAMN,KAAK,GAAGM,KAAK,CAACL,GAAD,CAAnB;AAEA,YAAMI,IAAI,GAAGd,WAAW,CAACS,KAAD,EAAQC,GAAR,CAAxB;;AAEA,UAAII,IAAI,IAAI,IAAZ,EAAkB;AAChB;AAAC,SAACD,WAAW,CAACC,IAAD,CAAX,KAICD,WAAW,CAACC,IAAD,CAAX,GAAoB,EAJrB,CAAD,EAI2BJ,GAJ3B,IAIkCD,KAJlC;AAMDgB,QAAAA,UAAU,CAACf,GAAD,CAAV,GAAkBI,IAAlB;AACD;AACF;AACF;;AAEDP,EAAAA,SAAS,CAACQ,KAAD,EAAQ;AACf,UAAQf,WAAR,GAA4E,IAA5E,CAAQA,WAAR;AAAA,UAAmCa,WAAnC,GAA4E,IAA5E,CAAqBZ,YAArB;AAAA,UAA6DwB,UAA7D,GAA4E,IAA5E,CAAgDrB,WAAhD;;AAEA,SAAK,MAAMM,GAAX,IAAkBK,KAAlB,EAAyB;AACvB,YAAMN,KAAK,GAAGM,KAAK,CAACL,GAAD,CAAnB;AAEA,YAAMgB,IAAI,GAAGD,UAAU,CAACf,GAAD,CAAvB;AACA,YAAMI,IAAI,GAAGd,WAAW,CAACS,KAAD,EAAQC,GAAR,CAAxB;AAGA,UAAIgB,IAAI,IAAI,IAAZ,EAAkB,OAAOb,WAAW,CAACa,IAAD,CAAX,CAAkBhB,GAAlB,CAAP;;AAGlB,UAAII,IAAI,IAAI,IAAZ,EAAkB;AAChB;AAAC,SAACD,WAAW,CAACC,IAAD,CAAX,KAECD,WAAW,CAACC,IAAD,CAAX,GAAoB,EAFrB,CAAD,EAE2BJ,GAF3B,IAEkCD,KAFlC;AAIDgB,QAAAA,UAAU,CAACf,GAAD,CAAV,GAAkBI,IAAlB;AACD,OAND,MAMO;AACL,eAAOW,UAAU,CAACf,GAAD,CAAjB;AACD;AACF;AACF;;AAEDF,EAAAA,SAAS,CAACO,KAAD,EAAQ;AACf,UAAsBF,WAAtB,GAA+D,IAA/D,CAAQZ,YAAR;AAAA,UAAgDwB,UAAhD,GAA+D,IAA/D,CAAmCrB,WAAnC;;AAEA,SAAK,MAAMM,GAAX,IAAkBK,KAAlB,EAAyB;AACvB,YAAMW,IAAI,GAAGD,UAAU,CAACf,GAAD,CAAvB;;AACA,UAAIgB,IAAI,IAAI,IAAZ,EAAkB;AAChB,eAAOb,WAAW,CAACa,IAAD,CAAX,CAAkBhB,GAAlB,CAAP;AACA,eAAOe,UAAU,CAACf,GAAD,CAAjB;AACD;AACF;AACF;;AArHgB","sourcesContent":["import iteratee from 'lodash/iteratee'\n\nimport clearObject from './clear-object'\nimport isEmpty from './is-empty'\nimport NotImplemented from './not-implemented'\nimport { ACTION_ADD, ACTION_UPDATE, ACTION_REMOVE } from './collection'\n\n// ===================================================================\n\nexport class Index {\n  constructor(computeHash) {\n    if (computeHash) {\n      this.computeHash = iteratee(computeHash)\n    }\n\n    this._itemsByHash = Object.create(null)\n    this._keysToHash = Object.create(null)\n\n    // Bound versions of listeners.\n    this._onAdd = this._onAdd.bind(this)\n    this._onUpdate = this._onUpdate.bind(this)\n    this._onRemove = this._onRemove.bind(this)\n  }\n\n  // This method is used to compute the hash under which an item must\n  // be saved.\n  computeHash(value, key) {\n    throw new NotImplemented('this method must be overridden')\n  }\n\n  // Remove empty items lists.\n  sweep() {\n    const { _itemsByHash: itemsByHash } = this\n    for (const hash in itemsByHash) {\n      if (isEmpty(itemsByHash[hash])) {\n        delete itemsByHash[hash]\n      }\n    }\n  }\n\n  // -----------------------------------------------------------------\n\n  get items() {\n    return this._itemsByHash\n  }\n\n  // -----------------------------------------------------------------\n\n  _attachCollection(collection) {\n    // Add existing entries.\n    //\n    // FIXME: I think there may be a race condition if the `add` event\n    // has not been emitted yet.\n    this._onAdd(collection.all)\n\n    collection.on(ACTION_ADD, this._onAdd)\n    collection.on(ACTION_UPDATE, this._onUpdate)\n    collection.on(ACTION_REMOVE, this._onRemove)\n  }\n\n  _detachCollection(collection) {\n    collection.removeListener(ACTION_ADD, this._onAdd)\n    collection.removeListener(ACTION_UPDATE, this._onUpdate)\n    collection.removeListener(ACTION_REMOVE, this._onRemove)\n\n    clearObject(this._itemsByHash)\n    clearObject(this._keysToHash)\n  }\n\n  // -----------------------------------------------------------------\n\n  _onAdd(items) {\n    const { computeHash, _itemsByHash: itemsByHash, _keysToHash: keysToHash } = this\n\n    for (const key in items) {\n      const value = items[key]\n\n      const hash = computeHash(value, key)\n\n      if (hash != null) {\n        ;(itemsByHash[hash] ||\n          // FIXME: We do not use objects without prototype for now\n          // because it breaks Angular in xo-web, change it back when\n          // this is fixed.\n          (itemsByHash[hash] = {}))[key] = value\n\n        keysToHash[key] = hash\n      }\n    }\n  }\n\n  _onUpdate(items) {\n    const { computeHash, _itemsByHash: itemsByHash, _keysToHash: keysToHash } = this\n\n    for (const key in items) {\n      const value = items[key]\n\n      const prev = keysToHash[key]\n      const hash = computeHash(value, key)\n\n      // Removes item from the previous hash's list if any.\n      if (prev != null) delete itemsByHash[prev][key]\n\n      // Inserts item into the new hash's list if any.\n      if (hash != null) {\n        ;(itemsByHash[hash] ||\n          // FIXME: idem: change back to Object.create(null)\n          (itemsByHash[hash] = {}))[key] = value\n\n        keysToHash[key] = hash\n      } else {\n        delete keysToHash[key]\n      }\n    }\n  }\n\n  _onRemove(items) {\n    const { _itemsByHash: itemsByHash, _keysToHash: keysToHash } = this\n\n    for (const key in items) {\n      const prev = keysToHash[key]\n      if (prev != null) {\n        delete itemsByHash[prev][key]\n        delete keysToHash[key]\n      }\n    }\n  }\n}\n"],"file":"index.js"}